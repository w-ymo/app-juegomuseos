/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gf.app.juegomuseos.views;

import com.gf.app.juegomuseos.utils.GameConstants;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * GUIRanking: vista del controlador {@link RankingController} donde se muestra
 * una tabla con los intentos almacenados en la base de datos.
 *
 * @see RankingController
 *
 * @author priparno
 * @author fercaslu
 */
public class GUIRanking extends javax.swing.JFrame {

    /**
     * ranking: una tabla donde se mostraran los usuarios.
     */
    private JTable ranking;
    /**
     * exitButton: el boton para volver al menu principal.
     */
    private JButton exitButton;

    /**
     * model: el modelo de la tabla ranking.
     */
    private DefaultTableModel model;

    /**
     * Creates new form GUIRanking
     */
    public GUIRanking() {
        initComponents();
        setFrame();
    }

    /**
     * setFrame: es el metodo principal que coloca en la vista la tabla y los
     * botones.
     */
    private void setFrame() {
        this.setPreferredSize(GameConstants.SCREEN_SIZE);
        this.pack();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setLayout(new BorderLayout());
        setTable();
        setButton();
        this.getContentPane().add(ranking);
    }

    /**
     * setTable: crea y aniade la tabla con el modelo {@link #model}.
     */
    private void setTable() {
        model = new DefaultTableModel();
        model.setDataVector(null, GameConstants.RANKING_COLUMNS);
        ranking = new JTable();
        ranking.setEnabled(false);
        ranking.setModel(model);
    }

    /**
     * setButton: crea y aniade el boton de volver.
     */
    private void setButton() {
        exitButton = new JButton("Volver");
        JPanel extra = new JPanel(new FlowLayout(FlowLayout.LEFT));
        extra.add(exitButton);
        this.getContentPane().add(extra, BorderLayout.NORTH);
    }

    //GETTER/SETTER
    /**
     * getRanking: devuelve un {@link JTable} que tendra el ranking.
     *
     * @return un {@link JTable}
     */
    public JTable getRanking() {
        return ranking;
    }

    /**
     * getExitButton: devuelve un {@link JButton} que saldra al menu principal.
     *
     * @return un {@link JButton}
     */
    public JButton getExitButton() {
        return exitButton;
    }

    /**
     * getModel: devuelve un modelo {@link DefaultTableModel} que es el modelo
     * de {@link #ranking}.
     *
     * @return un {@link DefaultTableModel}
     */
    public DefaultTableModel getModel() {
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
