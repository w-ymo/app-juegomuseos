/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gf.app.juegomuseos.views;

import com.gf.app.juegomuseos.utils.GameConstants;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 * GUISelectGame: vista del controlador {@link SelectGameController} donde se
 * muestran los juegos por separado en los botones.
 *
 * @see SelectGameController
 *
 * @author priparno
 * @author fercaslu
 */
public class GUISelectGame extends javax.swing.JFrame {

    /**
     * containerPanel: un panel que contiene las opciones y la etiqueta.
     */
    private JPanel containerPanel;

    /**
     * exitButton: es un boton de vuelta al menu principal.
     */
    private JButton exitButton;
    /**
     * options: es una lista de botones con las opciones de los juegos.
     */
    private List<JButton> options = new ArrayList<>();

    /**
     * Creates new form GUISelectGame
     */
    public GUISelectGame() {
        initComponents();
        setFrame();
    }

    /**
     * setFrame: es el metodo principal que coloca en la vista la etiqueta y los
     * botones de las opciones.
     */
    private void setFrame() {
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setLayout(new BorderLayout());
        containerPanel = new JPanel(new GridLayout(2, 0));
        this.getContentPane().add(containerPanel);
        setExitButton();
        setTitle();
        setButtons();
    }

    /**
     * setExitButton: crea y coloca el boton de volver.
     */
    private void setExitButton() {
        exitButton = new JButton("Volver");
        JPanel extra = new JPanel(new FlowLayout(FlowLayout.LEFT));
        extra.add(exitButton);
        this.getContentPane().add(extra, BorderLayout.NORTH);
    }

    /**
     * setTitle: crea y coloca una etiqueta para aclarar las instrucciones al
     * usuario.
     */
    private void setTitle() {
        JPanel titlePanel = new JPanel(new BorderLayout());
        JLabel title = new JLabel("Seleccione el modo de juego");
        title.setHorizontalAlignment(SwingConstants.CENTER);
        title.setFont(this.getFont().deriveFont(Font.BOLD, 50f));
        titlePanel.add(title);
        containerPanel.add(titlePanel);
    }

    /**
     * setButtons: crea y coloca los modos de juego almacenados en
     * {@link GameConstants#GAMES_NAMES} y con el codigo correspondiente de
     * {@link GameConstants#GAMES_CODES}.
     */
    private void setButtons() {
        JPanel optionsPanel = new JPanel(new GridLayout(0, 4));
        for (int i = 0; i < 4; i++) {
            JButton but = new JButton(GameConstants.GAMES_NAMES[i]);
            but.setFont(this.getFont().deriveFont(20f));
            but.setName(GameConstants.GAMES_CODES[i]);
            options.add(but);
            optionsPanel.add(but);
        }
        containerPanel.add(optionsPanel);
    }

    //GETTER/SETTER
    /**
     * getOptions: devuelve una lista de {@link JButton} que son las opciones de
     * juegos.
     *
     * @return una lista de {@link JButton}
     */
    public List<JButton> getOptions() {
        return options;
    }

    /**
     * getExitButton: devuelve un {@link JButton} que es el boton de vuelta al
     * menu principal.
     *
     * @return un {@link JButton}
     */
    public JButton getExitButton() {
        return exitButton;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
